#include <glut.h>
#include <ctype.h>
#include <cmath>

int WINDOW_HEIGHT = 400;
int WINDOW_WIDTH = 400;
int WINDOW_X_POSITION = 10;
int WINDOW_Y_POSITION = 100;
int WINDOW_ORTHO_X_START = -10;
int WINDOW_ORTHO_X_END = 10;
int WINDOW_ORTHO_Y_START = -10;
int WINDOW_ORTHO_Y_END = 10;

bool isShowing = true;
bool isPrimeiroGrau = false;
bool isSegundoGrau = false;
bool isTerceiroGrau = false;


void Eixo() {
	glColor3f(0.0, 0.0, 0.0);
	glBegin(GL_LINES);
		//Eixo X
		glVertex2f(WINDOW_ORTHO_X_START, 0);
		glVertex2f(WINDOW_ORTHO_X_END, 0);
		//Eixo Y
		glVertex2f(0, WINDOW_ORTHO_Y_START);
		glVertex2f(0, WINDOW_ORTHO_Y_END);
	glEnd();
}

void primeiroGrau() {
	glColor3f(0.0, 1.0, 0.0);
	glBegin(GL_POINTS);
	float x, y;
	for (x = -10; x <= 10; x += .01) {
		y = x;
		glVertex2f(x, y);
	}
	glEnd();
}

void segundoGrau() {
	glColor3f(0.0, 1.0, 0.0);
	glBegin(GL_POINTS);
	float x, y;
	for (x = -10; x <= 10; x += .01) {
		y = x * x;
		glVertex2f(x, y);
	}
	glEnd();
}

void terceiroGrau() {
	glColor3f(0.0, 1.0, 0.0);
	glBegin(GL_POINTS);
	float x, y;
	for (x = -10; x <= 10; x += .01) {
		y = cos(x);
		glVertex2f(x, y);
	}
	glEnd();
}

void redesenha() {
	glClearColor(1.0, 1.0, 1.0, 1.0);
	glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
	if (isShowing) {
		Eixo();
		if (isPrimeiroGrau) {
			primeiroGrau();
		}
		else if (isSegundoGrau) {
			segundoGrau();
		}
		else if (isTerceiroGrau) {
			terceiroGrau();
		}
	}	
	glFlush();
}

void teclado(unsigned char key, int x, int y) {
	switch (tolower(key)) {
		case 'e':
			isShowing = !isShowing;
			redesenha();
			break;
		case '1':
			isPrimeiroGrau = true;
			isSegundoGrau = false;
			isTerceiroGrau = false;
			redesenha();
			break;
		case '2':
			isPrimeiroGrau = false;
			isSegundoGrau = true;
			isTerceiroGrau = false;
			redesenha();
			break;
		case '3':
			isPrimeiroGrau = false;
			isSegundoGrau = false;
			isTerceiroGrau = true;
			redesenha();
			break;
	}
}

void main(int argc, char **argv) {
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGBA | GLUT_DEPTH);
	glutInitWindowSize(WINDOW_HEIGHT, WINDOW_HEIGHT);
	glutInitWindowPosition(WINDOW_X_POSITION, WINDOW_Y_POSITION);
	glutCreateWindow("Função");
	glutKeyboardFunc(teclado);
	//permite a utilização do teclado
	gluOrtho2D(WINDOW_ORTHO_X_START, WINDOW_ORTHO_X_END, WINDOW_ORTHO_Y_START, WINDOW_ORTHO_Y_END);
	glutDisplayFunc(redesenha);
	glutMainLoop();
}